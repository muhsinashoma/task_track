
https://chatgpt.com/c/68c7d7ee-c970-8327-9065-5ffe9d3ed1ac


✅ Summary Table
Action			 		Command

View branches		 		git branch

Switch branch		 		git switch branch_name

Create & switch branch	 		git switch -c new_branch_name

Merge into main	git switch main → 	git merge branch_name

Push branch to remote			git push origin branch_name

-------------------------------------------------------------------------

PS D:\Flutter-Project\task_track> git branch
* master

PS D:\Flutter-Project\task_track> git switch -c submaster
Switched to a new branch 'submaster'
PS D:\Flutter-Project\task_track> git branch
  master
* muhsina
  submaster

PS D:\Flutter-Project\task_track> git status
-----------------------------------------------------------------

Perfect! ✅

Now you are on the muhsina branch. Any changes you make and commits you create will only affect this branch, leaving master and submaster untouched.

Next Steps You Can Do

Check status of files:

git status


Shows which files are modified, staged, or untracked.

Add changes to staging:

git add .


Adds all modified files to be committed.

Commit changes:

git commit -m "Your commit message here"


Example:

git commit -m "Added task tracking feature"


Push branch to remote (GitHub/GitLab):

git push -u origin muhsina


The -u sets the upstream so next time you can just use git push.

Merge back to master (when work is done):

git switch master
git merge muhsina


-------------------------------------------------------------------------

Got it! You want a step-by-step guide for Git branch management, starting from scratch. I'll break it down clearly for you.

1️⃣ View Current Branch

To see which branch you are on and all available branches:

git branch


* main → shows your current branch

Other names → other branches

2️⃣ Switch to Another Branch

If you want to move to an existing branch:

git checkout branch_name   # older syntax


Or, with the newer syntax:

git switch branch_name


Example:

git switch Muhsina
git switch touhid

3️⃣ Create a New Branch and Switch to It

To make a new branch and move to it immediately:

git switch -c new_branch_name


Example:

git switch -c feature-login


This creates a branch called feature-login and switches to it.

4️⃣ Merge a Branch into Main

Once your work on a branch is done and you want to merge it into the main branch:

Switch to main first:

git switch main


Merge the other branch:

git merge branch_name


Example:

git merge Muhsina


This merges Muhsina branch into main.

5️⃣ Optional: Push Branch to Remote

If you want your branch to be on GitHub/GitLab:

git push origin branch_name


Example:

git push origin feature-login


✅ Summary Table

Action	Command
View branches	git branch
Switch branch	git switch branch_name
Create & switch branch	git switch -c new_branch_name
Merge into main	git switch main → git merge branch_name
Push branch to remote	git push origin branch_name